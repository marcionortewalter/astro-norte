---
import { LOGO_IMAGE, SITE } from "@config";

export interface Props {
  activeNav?: "manifesto" | "portfolio" | "team" | "content";
}

const { activeNav } = Astro.props;
---

<nav class="navbar">
  <div class="navbar-container">
    <!-- Logo -->
    <a class="logo-link" href="/">
      {
        LOGO_IMAGE.enable ? (
          <img
            src="/assets/norte-logo.png"
            alt={SITE.title}
            class="logo-img"
            fetchpriority="high"
            decoding="async"
          />
        ) : (
          <span class="logo-text">{SITE.title}</span>
        )
      }
    </a>

    <!-- Hamburger Button (Mobile Only) -->
    <button
      class="hamburger-btn"
      aria-label="Toggle Menu"
      aria-expanded="false"
      aria-controls="mobile-menu"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="hamburger-icon"
      >
        <line x1="4" x2="20" y1="6" y2="6" class="line"></line>
        <line x1="4" x2="20" y1="12" y2="12" class="line"></line>
        <line x1="4" x2="20" y1="18" y2="18" class="line"></line>
      </svg>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="close-icon"
      >
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
  </div>

  <!-- Mobile Menu (Hidden by Default) -->
  <div class="mobile-menu" id="mobile-menu">
    <ul class="mobile-menu-list">
      <li>
        <a
          class={`mobile-menu-link ${activeNav === "manifesto" ? "active" : ""}`}
          href="/manifesto/"
        >
          Manifesto
        </a>
      </li>
      <li>
        <a
          class={`mobile-menu-link ${activeNav === "portfolio" ? "active" : ""}`}
          href="/portfolio/"
        >
          Portfolio
        </a>
      </li>
      <li>
        <a
          class={`mobile-menu-link ${activeNav === "team" ? "active" : ""}`}
          href="/team/"
        >
          Team
        </a>
      </li>
      <li>
        <a
          class={`mobile-menu-link ${activeNav === "content" ? "active" : ""}`}
          href="/content/"
        >
          Content
        </a>
      </li>
    </ul>
  </div>
</nav>

<style>
  /* Navbar Container */
  .navbar {
    position: sticky;
    top: 0;
    z-index: 50;
    width: 100%;
    background-color: #000000;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .navbar-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 0.75rem 1rem;
    margin: 0;
  }

  /* Logo - Bem Ã  esquerda */
  .logo-link {
    display: flex;
    align-items: center;
    text-decoration: none;
    color: #ffffff;
    transition: var(--transition);
    flex-shrink: 0;
  }

  .logo-link:hover {
    opacity: 0.8;
  }

  .logo-img {
    height: 50px;
    width: auto;
    object-fit: contain;
    display: block;
  }

  .logo-text {
    font-size: 1.25rem;
    font-weight: 600;
    color: #ffffff;
  }

  /* Hamburger Button - Mobile Only */
  .hamburger-btn {
    display: none;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: transparent;
    border: none;
    color: #ffffff;
    cursor: pointer;
    transition: var(--transition);
    border-radius: 6px;
    padding: 0;
  }

  .hamburger-btn:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }

  .hamburger-icon,
  .close-icon {
    width: 24px;
    height: 24px;
    position: absolute;
    transition:
      opacity 0.2s ease-in-out,
      transform 0.2s ease-in-out;
  }

  .close-icon {
    opacity: 0;
    transform: rotate(-90deg);
  }

  .hamburger-btn[aria-expanded="true"] .hamburger-icon {
    opacity: 0;
    transform: rotate(90deg);
  }

  .hamburger-btn[aria-expanded="true"] .close-icon {
    opacity: 1;
    transform: rotate(0deg);
  }

  /* Mobile Menu */
  .mobile-menu {
    display: none;
    background-color: #000000;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.3s ease-in-out;
  }

  .mobile-menu.show {
    display: block;
    max-height: 400px;
  }

  .mobile-menu-list {
    list-style: none;
    margin: 0;
    padding: 1rem 0;
  }

  .mobile-menu-list li {
    margin: 0;
  }

  .mobile-menu-link {
    display: block;
    padding: 0.875rem 1rem;
    color: #ffffff;
    text-decoration: none;
    font-size: 1rem;
    font-weight: 500;
    transition: var(--transition);
    border-left: 3px solid transparent;
  }

  .mobile-menu-link:hover {
    background-color: rgba(255, 255, 255, 0.1);
    border-left-color: var(--primary);
  }

  .mobile-menu-link.active {
    color: var(--primary);
    background-color: rgba(243, 208, 62, 0.05);
    border-left-color: var(--primary);
  }

  /* Desktop: Hide hamburger and mobile menu */
  @media (min-width: 768px) {
    .hamburger-btn {
      display: none !important;
    }

    .mobile-menu {
      display: none !important;
    }

    .logo-img {
      height: 50px;
    }
  }

  /* Mobile: Show hamburger */
  @media (max-width: 767px) {
    .navbar-container {
      padding: 0.75rem 1rem;
    }

    .hamburger-btn {
      display: flex;
    }

    .logo-img {
      height: 40px;
    }
  }
</style>

<script>
  function initMobileMenu() {
    const hamburgerBtn = document.querySelector(".hamburger-btn");
    const mobileMenu = document.querySelector(".mobile-menu");

    if (!hamburgerBtn || !mobileMenu) return;

    hamburgerBtn.addEventListener("click", () => {
      const isExpanded = hamburgerBtn.getAttribute("aria-expanded") === "true";

      hamburgerBtn.setAttribute("aria-expanded", (!isExpanded).toString());
      mobileMenu.classList.toggle("show");
    });

    // Close menu when clicking on a link
    const menuLinks = document.querySelectorAll(".mobile-menu-link");
    menuLinks.forEach(link => {
      link.addEventListener("click", () => {
        hamburgerBtn.setAttribute("aria-expanded", "false");
        mobileMenu.classList.remove("show");
      });
    });
  }

  // Initialize on page load
  initMobileMenu();

  // Reinitialize on view transitions
  document.addEventListener("astro:after-swap", initMobileMenu);
</script>
